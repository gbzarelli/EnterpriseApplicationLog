version: '3'
services:
 ##########################################################
 ##########################################################
  rabbitmq:
    container_name: rabbit-mq
    image: rabbitmq:3-management-alpine
    user: $USER_UID
    volumes:
      - ./storage/rabbitmq/:/var/lib/rabbitmq/mnesia
    ports:
      - "15672:15672"
      - "5672:5672" 
    networks:
      - log
    environment:
      RABBITMQ_DEFAULT_USER: logUser
      RABBITMQ_DEFAULT_PASS: logPwd
      RABBITMQ_DEFAULT_VHOST: EnterpriseLog

  ##########################################################

  elasticsearch:
    container_name: elastic-search
    build: 
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    environment: 
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - network.host=0.0.0.0
      - cluster.name="elastic_stack_logging"
      - node.name="elastic_stack_logging_data"
      - discovery.zen.minimum_master_nodes=1
      - http.cors.enabled=true
      - http.cors.allow-origin="*"
    user: $USER_UID
    volumes: 
      - ./storage/elk/elasticsearch/:/usr/share/elasticsearch/data      
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://localhost:9200 || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5     
    networks:
      - log

  ##########################################################

  kibana:
    container_name: kibana    
    build: 
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    environment:
      - server.name=kibana
      - server.host="0"
      - elasticsearch.url=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://localhost:5601/ || exit 1"]
      interval: 30s
      timeout: 20s
      retries: 5     
    networks:
      - log

  ##########################################################

  logstash:
    container_name: log-stash
    build: 
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    user: $USER_UID
    volumes:
      - ./logstash/config/:/config/
    ports:
      # Configure input doors to receive from external beats
      - "5005:5005"
    links:
      - rabbitmq:AMQPServer
      - elasticsearch:elasticsearch
    networks:
      - log    
    command: logstash -f /config
    depends_on:
      - rabbitmq
      - elasticsearch

  ##########################################################

  metricbeat:
    container_name: metricbeat
    build: 
      context: metricbeat/
      args:
        ELK_VERSION: $ELK_VERSION
    user: root
    volumes:
      - ./metricbeat/config/product.metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - elasticsearch
      - kibana
      - rabbitmq
    restart: on-failure
    networks:
      - log

networks:
  log:
    driver: bridge
